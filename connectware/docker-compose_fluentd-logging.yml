version: "3.8"
x-logging: &logging
  logging:
    driver: fluentd
    options:
      fluentd-address: localhost:24224
      fluentd-async: "true"
      fluentd-sub-second-precision: "true"
networks:
  cybus:
    driver: bridge
    external: false
    ipam:
      config:
        - subnet: ${CYBUS_NETWORK_MASK}
      driver: default
services:
  admin-web-app:
    environment:
      CYBUS_ADMIN_WEB_APP_VRPC_TIMEOUT: ${CYBUS_ADMIN_WEB_APP_VRPC_TIMEOUT}
      DISPLAY_VERSION: 1.7.2
    hostname: admin-web-app
    image: registry.cybus.io/cybus/admin-web-app:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    <<: *logging
  auth-server:
    depends_on:
      - postgresql
      - system-control-server
    environment:
      CYBUS_ADMIN_USER_ENABLED: ${CYBUS_ADMIN_USER_ENABLED}
      CYBUS_AUTH_PASSWORD_POLICY_RULES: ${CYBUS_AUTH_PASSWORD_POLICY_RULES}
      CYBUS_INITIAL_ADMIN_USER_PASSWORD: ${CYBUS_INITIAL_ADMIN_USER_PASSWORD}
      CYBUS_LDAP_AUTO_ENFORCE_MFA: ${CYBUS_LDAP_AUTO_ENFORCE_MFA}
      CYBUS_LDAP_BIND_DN: ${CYBUS_LDAP_BIND_DN}
      CYBUS_LDAP_BIND_PASSWORD: ${CYBUS_LDAP_BIND_PASSWORD}
      CYBUS_LDAP_ENABLED: ${CYBUS_LDAP_ENABLED}
      CYBUS_LDAP_MEMBER_ATTRIBUTE: ${CYBUS_LDAP_MEMBER_ATTRIBUTE}
      CYBUS_LDAP_MODE: ${CYBUS_LDAP_MODE}
      CYBUS_LDAP_ROLES_ATTRIBUTE: ${CYBUS_LDAP_ROLES_ATTRIBUTE}
      CYBUS_LDAP_SEARCH_BASE: ${CYBUS_LDAP_SEARCH_BASE}
      CYBUS_LDAP_SEARCH_FILTER: ${CYBUS_LDAP_SEARCH_FILTER}
      CYBUS_LDAP_URL: ${CYBUS_LDAP_URL}
      CYBUS_LDAP_USER_RDN: ${CYBUS_LDAP_USER_RDN}
      CYBUS_LDAPS_CA_FILE: ${CYBUS_LDAPS_CA_FILE}
      CYBUS_LDAPS_TRUST_ALL_CERTS: ${CYBUS_LDAPS_TRUST_ALL_CERTS}
      CYBUS_MFA_BAN_DURATION_MINUTES: ${CYBUS_MFA_BAN_DURATION_MINUTES}
      CYBUS_MFA_ENABLED: ${CYBUS_MFA_ENABLED}
      CYBUS_MFA_ENCRYPTION_SALT: ${CYBUS_MFA_ENCRYPTION_SALT}
      CYBUS_MFA_ENCRYPTION_SECRET: ${CYBUS_MFA_ENCRYPTION_SECRET}
      CYBUS_MFA_MAX_INVALID_OTPS_PER_USER: ${CYBUS_MFA_MAX_INVALID_OTPS_PER_USER}
      CYBUS_MFA_WINDOW: ${CYBUS_MFA_WINDOW}
      NODE_ENV: production
    hostname: auth-server
    image: registry.cybus.io/cybus/auth-server:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
    <<: *logging
  broker:
    depends_on:
      - auth-server
      - system-control-server
    environment:
      AUTH_SERVER_IP: auth-server
      CYBUS_BROKER_USE_MUTUAL_TLS: ${CYBUS_BROKER_USE_MUTUAL_TLS}
      LISTENER_CA_FILE: /connectware_certs/cybus_ca.crt
      LISTENER_CERT_FILE: /connectware_certs/cybus_server.crt
      LISTENER_KEY_FILE: /connectware_certs/cybus_server.key
      MAX_OFFLINE_MESSAGES: 100
      MAX_ONLINE_MESSAGES: 3000
      PERSISTENT_CLIENT_EXPIRATION: 1d
      WEBHOOKS_CA_FILE: /connectware_certs/shared_yearly_server.crt
      WEBHOOKS_CERT_FILE: /connectware_certs/shared_yearly_server.crt
      WEBHOOKS_KEY_FILE: /connectware_certs/shared_yearly_server.key
    hostname: broker
    image: registry.cybus.io/cybus/broker:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
      - brokerData:/vernemq/data
      - brokerLog:/vernemq/log
    <<: *logging
  connectware:
    depends_on:
      - system-control-server
    hostname: connectware
    image: registry.cybus.io/cybus/ingress:1.7.2
    labels:
      - io.cybus.connectware=core
      - io.cybus.role=ingress
    networks:
      - cybus
    ports:
      - 1883:1883
      - 8883:8883
      - 443:8443
      - 80:8081
      - 4841:4841
      - 40000-40100:40000-40100
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
    <<: *logging
  container-manager:
    depends_on:
      - auth-server
      - broker
      - system-control-server
    environment:
      CYBUS_CM_RPC_TIMEOUT: ${CYBUS_CM_RPC_TIMEOUT}
      CYBUS_REGISTRY_PASS: ${CYBUS_REGISTRY_PASS}
      CYBUS_REGISTRY_USER: ${CYBUS_REGISTRY_USER}
      NODE_ENV: production
    hostname: container-manager
    image: registry.cybus.io/cybus/container-manager:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/connectware_certs
    <<: *logging
  doc-server:
    hostname: doc-server
    image: registry.cybus.io/cybus/doc-server:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    <<: *logging
  ingress-controller:
    depends_on:
      - system-control-server
    environment:
      CYBUS_ROUTE_TIMEOUT: 30
      MAX_TCP_CONNECTIONS: 10000
    hostname: ingress-controller
    image: registry.cybus.io/cybus/ingress-controller:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
    <<: *logging
  postgresql:
    depends_on:
      - system-control-server
    environment:
      NODE_ENV: production
      POSTGRES_DB: cybus_connectware
      POSTGRES_USER: cybus-admin
    hostname: postgresql
    image: registry.cybus.io/cybus/postgresql:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: always
    volumes:
      - postgresql:/var/lib/postgresql/data
      - certs:/connectware_certs
    <<: *logging
  protocol-mapper:
    depends_on:
      - broker
      - system-control-server
    environment:
      CYBUS_MQTT_USERNAME: __sys-protocol-mapper
      CYBUS_PM_RPC_TIMEOUT: ${CYBUS_PM_RPC_TIMEOUT}
      NODE_ENV: production
    hostname: protocol-mapper
    image: registry.cybus.io/cybus/protocol-mapper:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    privileged: true
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
    <<: *logging
  service-manager:
    depends_on:
      - auth-server
      - broker
      - container-manager
      - system-control-server
    environment:
      CYBUS_MQTT_HOST_FROM_SERVICES: connectware
      CYBUS_SM_RPC_TIMEOUT: ${CYBUS_SM_RPC_TIMEOUT}
      CYBUS_STORAGE_DIR: /data
      CYBUS_USE_SERVICES_GRAPH: "true"
      NODE_ENV: production
    hostname: service-manager
    image: registry.cybus.io/cybus/service-manager:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
      - service-manager:/data
    <<: *logging
  system-control-server:
    environment:
      CYBUS_REGISTRY_PASS: ${CYBUS_REGISTRY_PASS}
      CYBUS_SCS_RPC_TIMEOUT: ${CYBUS_SCS_RPC_TIMEOUT}
      GLOBAL_AGENT_HTTP_PROXY: ${CYBUS_PROXY}
      GLOBAL_AGENT_HTTPS_PROXY: ${CYBUS_PROXY}
      GLOBAL_AGENT_NO_PROXY: ${CYBUS_NO_PROXY}
      NODE_ENV: production
    hostname: system-control-server
    image: registry.cybus.io/cybus/system-control-server:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
      - systemControlServerData:/data
    <<: *logging
  workbench:
    depends_on:
      - auth-server
      - broker
    environment:
      CYBUS_WORKBENCH_PROJECTS_ENABLED: ${CYBUS_WORKBENCH_PROJECTS_ENABLED}
      HTTP_PROXY: ${CYBUS_PROXY}
      HTTPS_PROXY: ${CYBUS_PROXY}
      NO_PROXY: ${CYBUS_NO_PROXY}
      SUPPRESS_NO_CONFIG_WARNING: 1
    hostname: workbench
    image: registry.cybus.io/cybus/workbench:1.7.2
    labels:
      - io.cybus.connectware=core
    networks:
      - cybus
    restart: unless-stopped
    volumes:
      - certs:/connectware_certs
      - workbench:/data/.node-red
    <<: *logging
volumes:
  brokerData: null
  brokerLog: null
  certs: null
  postgresql: null
  service-manager: null
  systemControlServerData: null
  workbench: null
